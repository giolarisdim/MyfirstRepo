forex api documentation


#docker Client:
#Version:           18.06.1-ce
#API version:       1.38

#Mongo version 3.6.7



steps 1-5 will install docker and docker compose to our system
those can be found here too:
1 - 5 https://docs.docker.com/install/linux/docker-ce/ubuntu/#set-up-the-repository
6 - 8 https://docs.docker.com/compose/install/#prerequisites


copy paste in terminal of forex dir


1) sudo apt-get update

 
2) sudo apt-get install     apt-transport-https     ca-certificates     curl     software-properties-common


3) curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

  (this must give an OK)


4) sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic test"
sudo apt update
sudo apt install docker-ce


5) sudo docker run hello-world


6) sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose


7) sudo chmod +x /usr/local/bin/docker-compose


8) docker-compose --version


9) sudo apt install python-pip


10) pip install bcrypt


11) sudo docker-compose build


12) sudo docker-compose up


13) in ubuntu apps open postman - 
set up steps here: http://ubuntuhandbook.org/index.php/2018/09/install-postman-app-easily-via-snap-in-ubuntu-18-04/


14) time to make some tests with postman

 
14a) 
with POST selected in postman we hit:

localhost:5000\here we put our routes like ---->>
localhost:5000\register 

in postman we choose the "body" with "raw" data and "JSON(application/json)" then we hit above 

{
	"username": "mits",
	"password": "123"
}

those will return 

{
    "msg": "You successfully signed up for the API",
    "status": 200
}


14b) in this case we will see how much we take for 50 usd 

localhost:5000/usdtoeuro OR 
localhost:5000/usdtogbp

{
	"username": "mits",
	"password": "123",
	"x": 50
}

those will return a msg with the amount you take at this moment 

{
    "msg": 43.685,
    "status": 200
}
